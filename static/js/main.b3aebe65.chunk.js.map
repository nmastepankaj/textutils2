{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","about","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","split","length","About","color","backgroundColor","myStyle","setMyStyle","btnText","setBtnText","style","src","alt","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3aebe65.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li>\r\n           \r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link disabled\" href=\"/\">Disabled</a> */}\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable Dark Mode</label>\r\n</div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title here\",\r\n    about: \"About Text\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n// const [text, setText] = useState(\"Enter Text Here\");\r\n// console.log(useState(\"Enter Text Here2\"))\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase!\",\"success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"text cleared!\",\"success\");\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"pankaj singh rhana\")\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n           <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To uppercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert To lowercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n           <h1>Your Text Summary</h1>\r\n           <p>{text.split(\" \").length} words {text.length} character</p>\r\n           <p>{0.008*text.split(\" \").length} minutes read</p>\r\n           <h2>Preview</h2>\r\n           <p>{text.length>0?text:\"enter somthing in the textbox above to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color : \"black\",\r\n        backgroundColor : \"white\"\r\n    });\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const toggleStyle = () => {\r\n        if(myStyle.color === 'white'){\r\n            setMyStyle({\r\n                color : \"black\",\r\n                backgroundColor : \"white\"\r\n            })\r\n            setBtnText(\"Enable dark mode\");\r\n        }else{\r\n            setMyStyle({\r\n                color : \"white\",\r\n                backgroundColor : \"black\"\r\n            })\r\n            setBtnText(\"Enable light mode\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About Me</h1>\r\n            <div className=\"card\">\r\n  <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Card title</h5>\r\n    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n    <a href=\"/\" className=\"btn btn-primary\">Go somewhere</a>\r\n  </div>\r\n</div>\r\n<button type=\"button\" className=\"btn btn-primary mx-2 my-3\" onClick={toggleStyle}>{btnText}</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport './css/bootstrap.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"Textutils Dark mode\";\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = \"Textutils Light mode\";\n    }\n  }\n  return (\n    <>\n    \n    {/* <div className=\"container my-3\"> */}\n  <Router>\n  <Navbar title=\"pankaj\" about=\"about pankaj\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm heading=\"enter the text to analyze\" showAlert={showAlert}/>\n          </Route>\n        </Switch> */}\n        <Routes>\n        <Route exact path=\"/\" element={<TextForm heading=\"enter the text to analyze\" showAlert={showAlert}/>} />\n        <Route exact path=\"/about\" element={<About />}>\n        </Route>\n      </Routes>\n    </Router>\n    \n    {/* </div> */}\n    {/* <About/> */}\n    \n    {/* <Navbar/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}